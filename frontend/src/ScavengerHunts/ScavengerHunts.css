/* Root variables (you can adjust) */
:root {
  --stone-size: 100px;
  --stone-color: #ffffffb4;      /* golden “stone” */
  --connector-color: #555;
  --label-color: #333;
}

/* Container for the path of stones */
.scavenger-hunts {
  padding: 40px 20px;
  display: flex;
  justify-content: center;
  font-family: var(--font-family);
  overflow: visible;
}
.hunt-path {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: flex-start;     /* align to top of the tallest row */
  gap: 60px;            
  height: 280px;          /* height of the path */
  padding-bottom: 20px;
}

/* Base stone */
.hunt-circle {
  position: relative;
  width: var(--stone-size);
  height: var(--stone-size);
  background: var(--stone-color);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: transform 0.2s ease;
}

/* Hover pop */
.hunt-circle:hover {
  transform: scale(1.1);
}

/* Diagonal offset: push every 2nd, 4th, 6th… stone down */
.hunt-circle:nth-child(2n) {
  transform: translateY(20px);
}

/* If you want them in a more pronounced diagonal, you can stagger more:
   - 1st stone: no offset
   - 2nd stone: 20px down
   - 3rd stone: 40px down
   - 4th stone: 20px down
   - etc.
*/
.hunt-circle:nth-child(4n+1) { transform: translateY(0);  }
.hunt-circle:nth-child(4n+2) { transform: translateY(60px); }
.hunt-circle:nth-child(4n+3) { transform: translateY(120px); }
.hunt-circle:nth-child(4n+4) { transform: translateY(60px); }


/* Keep the icon and label as before */
.circle-icon { color: var(--label-color); font-size: 1.5rem; }
.hunt-label {
  position: absolute;
  top: calc(100% + 8px);
  width: 100%;
  text-align: center;
  font-size: 0.9rem;
  color: var(--label-color);
}

/* Responsiveness */
@media (max-width: 600px) {
  .hunt-path { gap: 40px; }
  .hunt-circle {
    width: 60px;
    height: 60px;
  }
  .circle-icon { font-size: 1.2rem; }
}
